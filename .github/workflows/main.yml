# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - run: dotnet build ./DotNetCoreOnK8S/DotNetCoreOnK8S.csproj

  docker:
    name: Publish To Docker Hub
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
            
      - name: Set build version
        run: |
          sed -i -e 's/999/${{ github.run_number }}/g' /DotNetCoreOnK8S/appsettings.json

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_REPO }}
          tags: ${{ github.run_number }}


  deploy:
    name: deploy container on k8s
    runs-on: ubuntu-latest
    needs: [docker]

    steps:

    - name: deploy container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.K8SHOST }}
        username: ${{ secrets.K8SUSERNAME }}
        password: ${{ secrets.K8SPASSWORD }}
        port: ${{ secrets.DEV_SSH_PORT }}
        command_timeout: 30m
        script: |
          kubectl set image --record deployment/dotnetcoreonk8s dotnetcoreonk8s=${{ secrets.DOCKER_REPO }}:${{ github.run_number }} -n fire-ug
