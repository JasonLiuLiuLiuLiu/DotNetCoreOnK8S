apiVersion: v1
kind: Namespace
metadata:
  name: fire-ug

---
apiVersion: v1
kind: Service
metadata:
  name: dotnetcoreonk8s
  namespace: fire-ug
spec:
  selector:
    app: dotnetcoreonk8s
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-pvc
  namespace: fire-ug
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: manual
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: log
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnetcoreonk8s
  namespace: fire-ug
spec:
  selector:
    matchLabels:
      app: dotnetcoreonk8s
  replicas: 2
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: dotnetcoreonk8s
    spec:
      containers:
      - name: dotnetcoreonk8s
        image: liuzhenyulive/dotnet-core-on-k8s:10
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 200m
        ports:
          - containerPort: 80
            name: dotnetcoreonk8s
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        volumeMounts:
          - mountPath: /app/log
            name: log-pvc
      volumes:
        - name: log-pvc
          persistentVolumeClaim:
            claimName: log-pvc
